package mapuserorder;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/mapuserorder") // This means URL's start with /demo (after Application path)
public class MapUserOrderController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private TaobaoOrderItemSyncRepository syncOrderRepo;
	@Autowired
	private TaobaoOrderItemRepository orderRepo;
	@Autowired
	private UserRepository userRepo;

	@GetMapping(path="/all")
	public @ResponseBody Iterable<TaobaoOrderItemSync> getAllSyncOrders() {
		// This returns a JSON or XML with the users
		return syncOrderRepo.findAll();
	}
	
	@GetMapping(path="/getbyorder")
	public @ResponseBody Iterable<TaobaoOrderItemSync> getByOrderId(@RequestParam(value="orderId", defaultValue="1111") Long orderId) {
		// This returns a JSON or XML with the users
		return syncOrderRepo.findBySyncOrderId(orderId);
	}

	/*
	 * 1:user id exists in duoshouji_user table
	 * 2:order id exists in taobao_order_item_sync table
	 * 3:user id and order id mapping does not exists in taobao_order_item table
	 * 4:create mapping in taobao_order_item table
	 */
	@GetMapping(path="/map")
	public @ResponseBody Result mapUserOrder(@RequestParam(value="orderId") Long orderId, @RequestParam(value="userId") Long userId) {

		Result rslt = new Result();
		
		//1:user id exists in duoshouji_user table?
		User usr = userRepo.findOne(userId);
		if(usr==null)
		{
			rslt.setStatus(-1);
			rslt.setMessage("用户不存在，请检查用户ID后再试。");
			return rslt;
		}
		//2:order id exists in taobao_order_item_sync table?
		List<TaobaoOrderItemSync> syncOrders = syncOrderRepo.findBySyncOrderId(orderId);
		if(syncOrders==null || syncOrders.size()==0)
		{
			rslt.setStatus(-1);
			rslt.setMessage("订单号不存在，此订单可能不是从剁手记生成的，或者订单还在同步中，请5分钟后再试。");
			return rslt;
		}
		
		//3:user id and order id mapping does not exists in taobao_order_item table?
		List<TaobaoOrderItem> orders = orderRepo.findByOrderId(orderId);
		if(orders!=null && orders.size()>0)
		{
			rslt.setStatus(-1);
			rslt.setMessage("此订单已经手动跟单成功，不能重复跟单。");
			return rslt;
		}
		
		
		//4:create mapping in taobao_order_item table
		TaobaoOrderItem order = new TaobaoOrderItem();
		order.setOrderId(orderId);
		order.setUserId(userId);
		orderRepo.save(order);
		
		rslt.setStatus(0);
		rslt.setMessage("跟单成功！请刷新交易页面查看。");
		
		return rslt;
	}
}
